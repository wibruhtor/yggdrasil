[workspace]
resolver = "2"
members = [
    'app',
    'config',
    'dao',
    'service',
    'twitch_api',
    'types',
    'utils',
    'web_server'
]

[workspace.dependencies]
# Internal
config = { path = "config" }
dao = { path = "dao" }
service = { path = "service" }
twitch_api = { path = "twitch_api" }
types = { path = "types" }
utils = { path = "utils" }
web_server = { path = "web_server" }
# Serde
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
# Types
chrono = { version = "0.4", features = ["serde"] }
uuid = { version = "1.4", features = ["v4", "fast-rng", "serde"] }
# Axum
axum = { version = "0.6", features = ["tokio", "json", "headers"] }
axum-client-ip = "0.4"
tower = "0.4"
tower-http = { version = "0.4", features = ["cors", "timeout"] }
tower-service = "0.3"
# Database
sqlx = { version = "0.7", features = [
    "runtime-tokio",
    "postgres",
    "migrate",
    "uuid",
    "json",
    "chrono",
] }
# Security
jsonwebtoken = "8"
magic-crypt = "3.1"
validator = { version = "0.16", features = ["derive"] }
# Observability
tracing = "0.1"
tracing-opentelemetry = "0.21"
tracing-opentelemetry-instrumentation-sdk = "0.14"
opentelemetry = "0.20"
opentelemetry_api = "0.20"
axum-tracing-opentelemetry = "0.14"
init-tracing-opentelemetry = { version = "0.14", features = ["tracing_subscriber_ext", "stdout"] }
# Testing
fake = { version = "2.8", features = ["derive", "serde_json", "chrono", "uuid"] }
# Utilities
dotenvy = "0.15"
anyhow = "1.0"
rand = "0.8"
reqwest = { version = "0.11", features = ["json"] }
tokio = { version = "1.32", features = ["full"] }
futures-util = "0.3"
pin-project = "1.1"
